// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  clerkId String @unique

  email       String  @unique
  username    String  @unique
  profileImg  String
  firstName   String
  lastName    String
  bio         String
  isOnboarded Boolean @default(false)

  followersIds String[] @default([]) @db.ObjectId
  followingIds String[] @default([]) @db.ObjectId

  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  posts    Post[]
  comments Comment[]
}

model Post {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  caption String
  url     String

  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  likeUserIds String[] @default([]) @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  comments Comment[]
}

model Comment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  text        String
  userId      String   @db.ObjectId
  postId      String   @db.ObjectId
  likeUserIds String[] @default([]) @db.ObjectId

  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])

  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
